{"version":3,"file":"index.mjs","sources":["src/ReduxBundlerContext.js","src/useConnect.js","src/index.js"],"sourcesContent":["import React from 'react'\n\nexport default React.createContext(null)\n","import { useContext, useEffect, useState, useMemo, useRef } from 'react'\n\nimport ReduxBundlerContext from './ReduxBundlerContext'\n\nexport default function useConnect(...args) {\n  const { store } = useContext(ReduxBundlerContext)\n\n  const [keysToWatch, actions] = useMemo(() => cookArguments(store, args), args)\n\n  const [state, setState] = useState(() => store.select(keysToWatch))\n\n  const prevKeysToWatchRef = useRef(keysToWatch)\n\n  useEffect(() => {\n    if (prevKeysToWatchRef.current !== keysToWatch) {\n      prevKeysToWatchRef.current = keysToWatch\n      setState(store.select(keysToWatch))\n    }\n\n    return store.subscribeToSelectors(keysToWatch, changes => {\n      setState(currentState => ({ ...currentState, ...changes }))\n    })\n  }, [keysToWatch])\n\n  if (prevKeysToWatchRef.current !== keysToWatch) {\n    return {\n      ...actions,\n      ...store.select(keysToWatch)\n    }\n  }\n\n  return {\n    ...actions,\n    ...state,\n  }\n}\n\nfunction cookArguments(store, args) {\n  const keysToWatch = []\n  const actions = {}\n\n  args.forEach(keyName => {\n    if (keyName.slice(0, 6) === 'select') {\n      keysToWatch.push(keyName)\n      return\n    }\n\n    if (keyName.slice(0, 2) === 'do') {\n      actions[keyName] = (...args) => {\n        if (store.action) {\n          return store.action(keyName, args)\n        }\n        return store[keyName](...args)\n      }\n      return\n    }\n\n    throw Error(`Can Not Connect: ${keyName}`)\n  })\n\n  return [keysToWatch, actions]\n}\n","import React from 'react'\n\nimport ReduxBundlerContext from './ReduxBundlerContext'\n\nexport { default as useConnect } from './useConnect'\n\nexport const ReduxBundlerProvider = ({ store, children }) =>\n  React.createElement(ReduxBundlerContext.Provider, { value: { store } }, children)\n"],"names":["React","createContext","useConnect","args","store","useContext","ReduxBundlerContext","useMemo","keysToWatch","actions","forEach","keyName","slice","Error","action","push","cookArguments","useState","select","state","setState","prevKeysToWatchRef","useRef","useEffect","current","subscribeToSelectors","changes","currentState","ReduxBundlerProvider","createElement","Provider","value","children"],"mappings":"4FAEA,MAAeA,EAAMC,cAAc,61BCEXC,2CAAcC,2BAAAA,cAC5BC,EAAUC,EAAWC,GAArBF,UAEuBG,EAAQ,kBA8BzC,SAAuBH,EAAOD,OACtBK,EAAc,GACdC,EAAU,UAEhBN,EAAKO,QAAQ,SAAAC,MACiB,WAAxBA,EAAQC,MAAM,EAAG,OAKO,OAAxBD,EAAQC,MAAM,EAAG,SAUfC,iCAA0BF,IAT9BF,EAAQE,GAAW,kDAAIR,2BAAAA,iBACjBC,EAAMU,OACDV,EAAMU,OAAOH,EAASR,GAExBC,EAAMO,SAANP,EAAkBD,SAT3BK,EAAYO,KAAKJ,KAiBd,CAACH,EAAaC,GArDwBO,CAAcZ,EAAOD,IAAOA,MAAlEK,OAAaC,WAEMQ,EAAS,kBAAMb,EAAMc,OAAOV,QAA/CW,OAAOC,OAERC,EAAqBC,EAAOd,UAElCe,EAAU,kBACJF,EAAmBG,UAAYhB,IACjCa,EAAmBG,QAAUhB,EAC7BY,EAAShB,EAAMc,OAAOV,KAGjBJ,EAAMqB,qBAAqBjB,EAAa,SAAAkB,GAC7CN,EAAS,SAAAO,eAAsBA,EAAiBD,QAEjD,CAAClB,SAIGC,EAFHY,EAAmBG,UAAYhB,EAG5BJ,EAAMc,OAAOV,GAMfW,OC3BMS,EAAuB,mBAClC5B,EAAM6B,cAAcvB,EAAoBwB,SAAU,CAAEC,MAAO,CAAE3B,QADxBA,UAAO4B"}